setwd("~/Dropbox/Dora/Anova")
readMyData <- function(){
myCheckData <<- read.csv('output.csv')
}
readMyData()
summary(myCheckData)
summary(myCheckData$expCondition)
summary(myCheckData$expCondition, meanTrialTime)
summary(myCheckData$expCondition ~ meanTrialTime)
output <- read.csv( 'output.csv' )
myANOVA <- aov(output$meanTrialTime ~ output$expCondition, data = output)
print( model.tables( myANOVA, "means"), digits = 3 )
print( model.tables( myANOVA, "standard deviations"), digits = 3 )
print( model.tables( myANOVA, "sd"), digits = 3 )
print( summary( myANOVA ) )
myANOVA <- aov(output$meanTrialTime ~ output$interfaceCondition, data = output)
print( summary( myANOVA ) )
summary(myCheckData, myCheckData$expCondition = 'no tetris')
summary(myCheckData, myCheckData$expCondition='no tetris')
library(psych)
install.packages("psych")
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
describe.by(output, myCheckData$expCondition = 'no tetris')
describe.by(output)
describe.by(output, group='no tetris')
describe.by(output, expCondition='no tetris')
print( model.tables( myANOVA), digits = 3 )
myANOVA
mean(output$expCondition='no tetris')
mean(1,10)
mean('1','10')
list = 1, 2, 3, 4
list = [1, 2, 3, 4]
list = [1 2 3 4]
myList = [1 2 3 4]
readMyData <- function(){
myData <<- read.csv( '/Users/doragrgic/Analysis/allDataP1-P22.csv' )
}
readMyData()
readMyData <- function(){
myData <- read.csv('allDataP1-P22.csv')}
readMyData()
output <- c()
trialTimes <- c()
for( pp in 1:max( myData$ID ) ){
for( interfaceCond in 1:length( levels( myData$Interface ))){
for( expCond in 1:length( levels( myData$Condition ))){
condData <- subset( myData, myData$ID == pp &
myData$Interface == levels( myData$Interface )[interfaceCond] &
myData$Condition == levels( myData$Condition )[expCond] )
enteredDataRows <- subset( condData, condData$NumberTyped == "enter" )
incorrectData <- subset (enteredDataRows, enteredDataRows$Correct == "FALSE")
write.table(  incorrectData, file = "./FALSEoutput.csv", row.names = FALSE, sep="," )
propCorrect <- ( calculatePropCorrect( enteredDataRows ) )
meanTrialTime <- round( mean( enteredDataRows$CharTypedMillis - enteredDataRows$StartTime ) / 1000, 2 )
trialTimes <- append( trialTimes, round( (enteredDataRows$CharTypedMillis - enteredDataRows$StartTime)/1000 ), 2)
output <- rbind( output, data.frame(
partID = condData$ID[1],
interfaceCondition = condData$Interface[1],
expCondition = condData$Condition[1],
meanAccuracy = propCorrect,
meanTrialTime = meanTrialTime
) )
}
}
}
write.table(  output, file = "./output.csv", row.names = FALSE, col.names = TRUE, sep="," )
myData <<- read.csv('allDataP1-P22.csv')
for( pp in 1:max( myData$ID ) ){
for( interfaceCond in 1:length( levels( myData$Interface ))){
for( expCond in 1:length( levels( myData$Condition ))){
condData <- subset( myData, myData$ID == pp &
myData$Interface == levels( myData$Interface )[interfaceCond] &
myData$Condition == levels( myData$Condition )[expCond] )
enteredDataRows <- subset( condData, condData$NumberTyped == "enter" )
incorrectData <- subset (enteredDataRows, enteredDataRows$Correct == "FALSE")
write.table(  incorrectData, file = "./FALSEoutput.csv", row.names = FALSE, sep="," )
propCorrect <- ( calculatePropCorrect( enteredDataRows ) )
meanTrialTime <- round( mean( enteredDataRows$CharTypedMillis - enteredDataRows$StartTime ) / 1000, 2 )
trialTimes <- append( trialTimes, round( (enteredDataRows$CharTypedMillis - enteredDataRows$StartTime)/1000 ), 2)
output <- rbind( output, data.frame(
partID = condData$ID[1],
interfaceCondition = condData$Interface[1],
expCondition = condData$Condition[1],
meanAccuracy = propCorrect,
meanTrialTime = meanTrialTime
) )
}
}
}
for( pp in 1:max( myData$ID ) ){
for( interfaceCond in 1:length( levels( myData$Interface ))){
for( expCond in 1:length( levels( myData$Condition ))){
condData <- subset( myData, myData$ID == pp &
myData$Interface == levels( myData$Interface )[interfaceCond] &
myData$Condition == levels( myData$Condition )[expCond] )
print( condData[,4:15] )
}
}
}
for( pp in 1:max( myData$ID ) ){
for( interfaceCond in 1:length( levels( myData$Interface ))){
for( expCond in 1:length( levels( myData$Condition ))){
condData <- subset( myData, myData$ID == pp &
myData$Interface == levels( myData$Interface )[interfaceCond] &
myData$Condition == levels( myData$Condition )[expCond] )
enteredDataRows <- subset( condData, condData$NumberTyped == "enter" )
incorrectData <- subset (enteredDataRows, enteredDataRows$Correct == "FALSE")
write.table(  incorrectData, file = "./FALSEoutput.csv", row.names = FALSE, sep="," )
}}
}
print (incorrectData[,1:14])
setwd("/Volumes/jborghou/Study 2 - NWT/22 January/")
output <- read.csv( './output-subset.csv' )
output$condition_IAC = factor(output$condition_IAC, levels = c("L", "M", "H"))
output$part_id = factor(rep(output$part_id))
levels( output$part_id )
q()
cd Downloads
setwd("~/Downloads")
Results <- read.table("Unknown-3.csv", header=TRUE, sep=",")
summary(Results)
aov.ex2 = aov(Time~Width*Distance,data=Results)
summary(aov.ex2)
setwd("/Volumes/jborghou/Teaching/Interaction\ Science/test")
Results <- read.table("merged.csv", header=TRUE, sep=",")
Results <- read.table("merged.csv", header=TRUE, sep=",")
summary(Results)
aov.ex2 = aov(Time~Width*Distance,data=Results)
summary(aov.ex2)
mean(Width)
mean(Results$Time[Width == '350'])
setwd("~/Volumes/jborghou/Teaching/Interaction \Science/11 \Ocotber \Fitt's \Law")
setwd("~/Volumes/jborghou/Teaching/Interaction Science/11 October Fitt's Law")
setwd("~/htdocs/Study4/")
errors <- read.csv( 'errors.csv' )
results <- read.csv( 'master.csv' )
errors$IAC = factor(errors$IAC, levels = c("low", "high"))
errors$ParticipantID = factor(rep(errors$ParticipantID))
summary(errors)
a <- errors$TimeTaken[errors$IAC == 'high']
b <- errors$TimeTaken[errors$IAC == 'high']
errors$IAC = factor(errors$IAC, levels = c("low", "high"))
errors$IAC
errors$TrialNo
errors
errors$.IAC. = factor(errors$.IAC., levels = c("low", "high"))
errors$..IAC. = factor(errors$..IAC., levels = c("low", "high"))
errorsX..Phase.
errors$..Phase.
errors$.Phase.
errors$Phase
errors$"Phase"
errors[0]
errors <- read.csv( 'errors.csv' )
errors$IAC = factor(errors$IAC, levels = c("low", "high"))
errors$ParticipantID = factor(rep(errors$ParticipantID))
a <- results$TimeTaken[results$IAC == 'high' & results$EventType == 'visit']
b <-results$TimeTaken[results$IAC == 'low' & results$EventType == 'visit']
a <- errors$TimeTaken[errors$IAC == 'high']
b <- errors$TimeTaken[errors$IAC == 'high']
t.test(a,b, paired=TRUE)
a <- errors$TimeTaken[errors$IAC == 'low']
b <- errors$TimeTaken[errors$IAC == 'high']
t.test(a,b, paired=TRUE)
t.test(a,b, paired=TRUE, na.rm=TRUE)
mean(A)
mean(a)
mean(b)
summary(a)
summary(b)
b <- errors$Correct[errors$IAC == 'high']
b <- errors$Correct[errors$IAC == 'low']
a <- errors$Correct[errors$IAC == 'low']
b <- errors$Correct[errors$IAC == 'high']
summary(a)
summary(b)
t.test(a,b, paired=TRUE)
results[1]
results[1:2]
results[,2]
results[c(1:100), ];
test <- results[c(74:107), ];
